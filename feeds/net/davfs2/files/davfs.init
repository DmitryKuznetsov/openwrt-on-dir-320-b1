#!/bin/sh /etc/rc.common

START=99

mount_resource () {
	local url
	local user
	local password
	local mountpoint
	local clientcert
	local servercert
	local mountopts
	local force_y
	
	config_get url $1 url
	config_get user $1 user
	config_get password $1 password
	config_get mountpoint $1 mountpoint
	config_get clientcert $1 clientcert
	config_get servercert $1 servercert
	config_get mountopts $1 mountopts
	config_get_bool force_y $1 force_y

	if [ "$servercert" ] || [ "$clientcert" ]; then
		echo "[$mountpoint]" >> /etc/davfs2/davfs2.conf
		[ "$servercert" ] && echo "servercert $servercert" >> /etc/davfs2/davfs2.conf
		[ "$clientcert" ] && echo "clientcert $clientcert" >> /etc/davfs2/davfs2.conf
		echo >> /etc/davfs2/davfs2.conf
	fi

	echo "$url $user $password" >> /etc/davfs2/secrets
	chmod 0600 /etc/davfs2/secrets

	[ -e "$mountpoint" ] || mkdir -p "$mounpoint"

	if $force_y; then
		[ -e /tmp/dav.inp ] || echo "y" > /tmp/dav.inp
		mount -t davfs $url "$mountpoint" "$mountopts" < /tmp/dav.inp
	else
		mount -t davfs $url "$mountpoint" "$mountopts"
	fi

	if [ $? -eq 0 ]; then
		echo "mounted $url to $mountpoint"	
	else	
		echo "errror mounting $url to $mountpoint"
	fi

	sleep 3
}

unmount_resource () {
	local mountpoint

        config_get mountpoint $1 mountpoint

	umount "$mountpoint" || umount -f "$mountpoint" || umount -l "$mountpoint"
	echo unmounted $url from $mountpoint
}

config_generate () {
	param_list="cache_size table_size dir_refresh \
			file_refresh delay_upload debug \
			use_proxy proxy ask_auth use_locks \
			lock_timeout lock_refresh use_expect100 \
			if_match_bug drop_weak_etags allow_cookie \
			precheck server_charset connect_timeout \
			read_timeout retry max_retry max_upload_attempts"
	
	for option in $param_list; do
		local $option
		config_get $option $1 $option
	done
	
	echo generating config...

	[ -e /etc/davfs2/davfs2.conf ] && rm /etc/davfs2/davfs2.conf
	
	echo "cache_size $cache_size" > /etc/davfs2/davfs2.conf
	echo "table_size $table_size" >> /etc/davfs2/davfs2.conf
	echo "dir_refresh $dir_refresh" >> /etc/davfs2/davfs2.conf
	echo "file_refresh $file_refresh" >> /etc/davfs2/davfs2.conf
	echo "delay_upload $delay_upload" >> /etc/davfs2/davfs2.conf
	[ $debug ] && echo "debug $debug" >> /etc/davfs2/davfs2.conf
	echo "use_proxy $use_proxy" >> /etc/davfs2/davfs2.conf
	[ $proxy ] && echo "proxy $proxy" >> /etc/davfs2/davfs2.conf
	echo "ask_auth $ask_auth" >> /etc/davfs2/davfs2.conf
	echo "use_locks $use_locks" >> /etc/davfs2/davfs2.conf
	echo "lock_timeout $lock_timeout" >> /etc/davfs2/davfs2.conf
	echo "lock_refresh $lock_refresh" >> /etc/davfs2/davfs2.conf
	echo "use_expect100 $use_expect100" >> /etc/davfs2/davfs2.conf
	echo "if_match_bug $if_match_bug" >> /etc/davfs2/davfs2.conf
	echo "drop_weak_etags $drop_weak_etags" >> /etc/davfs2/davfs2.conf
	echo "allow_cookie $allow_cookie" >> /etc/davfs2/davfs2.conf
	echo "precheck $precheck" >> /etc/davfs2/davfs2.conf
	echo "server_charset $server_charset" >> /etc/davfs2/davfs2.conf
	echo "connect_timeout $connect_timeout" >> /etc/davfs2/davfs2.conf
	echo "read_timeout $read_timeout" >> /etc/davfs2/davfs2.conf
	echo "retry $retry" >> /etc/davfs2/davfs2.conf
	echo "max_retry $max_retry" >> /etc/davfs2/davfs2.conf
	echo "max_upload_attempts $max_upload_attempts" >> /etc/davfs2/davfs2.conf
}

start () {
	config_load davfs
	config_foreach config_generate main
	
	echo "trying mount..."
	[ -e /etc/davfs2/secrets ] && rm /etc/davfs2/secrets
	config_foreach mount_resource mount
}

stop () {
	config_load davfs
	
	echo "unmounting..."
	config_foreach unmount_resource mount

	echo "removing generated configs..."
	rm /etc/davfs2/secrets
	rm /etc/davfs2/davfs2.conf
	[ `ps | grep mount.davfs | grep -v grep` ] && killall mount.davfs
	[ -e /var/run/mount.davfs/*.pid ] && rm -rf /var/run/mount.davfs/*.pid
}
	
